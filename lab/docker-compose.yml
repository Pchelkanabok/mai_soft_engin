version: '3.8'

services:
  db_auth:
    image: postgres:13
    command: postgres -p 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=conf_search
      - PGPORT=5432
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d conf_search"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    
  db_user:
    image: postgres:13
    command: postgres -p 5433
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=conf_search
      - PGPORT=5433
    volumes:
      - users_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d conf_search"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  report_db:
    image: mongo:latest
    hostname: report_mongo
    environment:
      - MONGO_INITDB_DATABASE=report_db
      - MONGO_INITDB_ROOT_USERNAME=practical-proj
      - MONGO_INITDB_ROOT_PASSWORD=1
    ports:
      - 27017:27017
    networks:
      - app-network
  conf_db:
    image: mongo:latest
    hostname: conf_mongo
    environment:
      - MONGO_INITDB_DATABASE=conf_db
      - MONGO_INITDB_ROOT_USERNAME=practical-proj
      - MONGO_INITDB_ROOT_PASSWORD=1
    ports:
      - 27018:27017
    networks:
      - app-network 
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  auth_service:
    build: ./auth_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://practical-proj:1@db_auth:5432/conf_search
      - SECRET_KEY=test-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1000
    depends_on:
      db_auth:
        condition: service_healthy
    networks:
      - app-network
  user_service:
    build: ./user_service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://practical-proj:1@db_user:5433/conf_search
      - AUTH_SERVICE_URL=http://auth_service:8000
    depends_on:
      auth_service:
        condition: service_started
      db_user:
        condition: service_healthy
    networks:
      - app-network
  report_service:
    build: ./report_service
    ports:
      - "8003:8003"
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - DATABASE_URL=mongodb://practical-proj:1@report_mongo:27017/?authSource=admin
    depends_on: 
      auth_service:
        condition: service_started
    networks:
      - app-network
  conf_service:
    build: ./conf_service
    ports:
      - "8002:8002"
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - REPORT_URL=http://report_service:8003
      - USER_SERVICE_URL=http://user_service:8001
      - DATABASE_URL=mongodb://practical-proj:1@conf_mongo:27017/conf_db?authSource=admin
    depends_on: 
      auth_service:
        condition: service_started
      report_service:
        condition: service_started
      user_service:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-network
    links:
      - conf_db

volumes:
    auth_postgres_data:
    users_postgres_data:
networks:
  app-network:
