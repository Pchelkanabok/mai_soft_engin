version: '3.8'

services:
  db_auth:
    image: postgres:13
    command: postgres -p 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=auth_db
      - PGPORT=5432
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    
  db_user:
    image: postgres:13
    command: postgres -p 5433
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=user_db
      - PGPORT=5433
    volumes:
      - users_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d user_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  auth_service:
    build: ./auth_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://practical-proj:1@db_auth:5432/auth_db
      - SECRET_KEY=test-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1000
    depends_on:
      db_auth:
        condition: service_healthy
    networks:
      - app-network

  user_service:
    build: ./user_service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://practical-proj:1@db_user:5433/user_db
      - AUTH_SERVICE_URL=http://auth_service:8000
    depends_on:
      auth_service:
        condition: service_started
      db_user:
        condition: service_healthy
    networks:
      - app-network
volumes:
    auth_postgres_data:
    users_postgres_data:
networks:
  app-network:
